mongodb
install mongodb mongodb
using cmd
go to C:\Program Files\MongoDB\Server\3.6
go to bin directory
create a mongo-data directory anywhere you want where data will be stored in that folder. create it in your users directory
in cmd run
mongod.exe --dbpath /Users/Peyman/mongo-data //this starts up the server on default 27017 port
run 
mongo.exe from a second cmd screen on the same /bin directory
you can run test by 
db.Todos.insert({text: 'create new course'})//you should ge WriteResult... back
db.Todos.find()

create heroku app
on the app folder execute
heroku create//this will create the app
heroku addons:create mongolab:sandbox//this will create a mongodb db using the sandbox membership which is free
heroku config//this will give you config info for you app. the MONGODB_URI is the path of the db that mLab gave you, which is what you use
heroku config:set //you can set certain things relevant to your app. 
heroku config:set NAME=Peyman//this will set the Name key as part of your heroku config 
heroku config:set JWT_SECRET//the JWT secret phrase used for hashing your passwords
heroku config:unset NAME//will unset a config variable. if you want to remove it
git push heroku master//will push your app to heroku servers. at the end it will give you the URL to go to 
heroku open//which will open the app in your browser


executing commands 
npm test - will execute the script in package.json that is specified. 

npm install - will install all dependencies on a local nodes_module folder


install packages and save to package.json
npm install validator --save//the --save installs to package.json

npm install crypto-js --save//crypto-js provides hashing methods for secure token to server and client
npm install jsonwebtoken --save//this is better that crypto with lot of the methods easier to write since the concept of web token is not new
go to jwt.io to validate your tokens and make sure the signature comes back invalid without the secret message.
npm install sequelize --this provides SQL connection and various SQL commands including making SQL tables into object for ORM frameworks
npm install tedious -- this npm is needed using sequelize when connecting to a MSSQL database